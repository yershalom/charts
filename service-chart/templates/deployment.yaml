apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service-chart.fullname" . }}
  labels:
    {{- include "service-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "service-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "service-chart.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
      - name: secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Values.nameOverride }}-aws-secret
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "service-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.nameOverride }}
          env:
            {{- range .Values.secretToFetch }}
            - name: {{ .envName }}
              valueFrom:
                secretKeyRef:
                  name: {{ .kubeSecretName }}
                  key: {{ .secretKey }}
            {{- end }}
            - name: FRONTEGG
          {{- if .Values.envFromConfigMap }}
          envFrom:
            - configMapRef:
                name: {{ .Values.envFromConfigMap.name }}
                optional: true
          {{- end }}
          volumeMounts:
          - name: secrets
            mountPath: "/mnt/secrets-store"
            readOnly: true
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
